#
# For a description of the syntax of this configuration file,
# see kconfig-language at https://www.kernel.org/doc/Documentation/kbuild/kconfig-language.txt
#

menu "LwIP options"

menu "LwIP memory options"

config NET_LWIP_MEM_ALIGNMENT
	int "Memory alignment size"
	default 4
	---help---
		should be set to the alignment of the CPU

config NET_LWIP_MEM_SIZE
	int "Size of LwIP memory pool"
	default 1600
	---help---
		the size of the heap memory. If the application will send
		a lot of data that needs to be copied, this should be set high.

config NET_LWIP_MEMP_OVERFLOW_CHECK
	int "Memory pool overflow protection"
	default 0
	---help---
		memp overflow protection reserves a configurable amount of bytes
		before and after each memp element in every pool and fills
		it with a prominent default value.
		if 0, no checking
		if 1, checks each element when it is freed
		if 2, checks each element in every pool every time memp_malloc()
		or memp_free() is called (useful but slow!)

config NET_LWIP_MEMP_SANITY_CHECK
	bool "Memory pool sanity check"
	default n
	---help---
		run a sanity check after each memp_free() to make sure that
		there are no cycles in the linked lists.

config NET_LWIP_MEMP_NUM_PBUF
	int "Number of Pbufs"
	default 16
	---help---
		The number of memp struct pbufs (used for PBUF_ROM and PBUF_REF).
		If the application sends a lot of data out of ROM (or other static memory),
		this should be set high.

config NET_LWIP_MEMP_NUM_RAW_PCB
	int "Number of raw connection PCBs"
	default 4
	depends on NET_LWIP_RAW
	---help---
		Number of raw connection PCBs

config NET_LWIP_MEMP_NUM_UDP_PCB
	int "Number of udp connection PCBs"
	default 4
	depends on NET_LWIP_UDP
	---help---
		Number of udp connection PCBs

config NET_LWIP_MEMP_NUM_TCP_PCB
	int "Number of tcp connection PCBs"
	default 5
	depends on NET_LWIP_TCP
	---help---
		Number of tcp connection PCBs

config NET_LWIP_MEMP_NUM_TCP_PCB_LISTEN
	int "Number of listening tcp connections"
	default 5
	depends on NET_LWIP_TCP
	---help---
		Number of simultaneously queued TCP segments

config NET_LWIP_MEMP_NUM_TCP_SEG
	int "Number of simultaneously queued TCP segments"
	default 16
	depends on NET_LWIP_TCP
	---help---
		Number of simultaneously queued TCP segments

config NET_LWIP_MEMP_NUM_REASSDATA
	int "Number of IP reassemble packets"
	default 5
	---help---
		Number of IP fragments simultaneously sent
		for reassembly (whole packets, not fragments!)

config NET_LWIP_MEMP_NUM_FRAG_PBUF
	int "Number of IP fragments packets"
	default 15
	---help---
		Number of IP fragments simultaneously sent
		(fragments, not whole packets!).

config NET_LWIP_MEMP_NUM_ARP_QUEUE
	int "Maximum number of waiting arp request packet"
	default 30
	---help---
		Number of simultaneously queued outgoing packets (pbufs)
		that are waiting for an ARP request (to resolve their
		destination address) to finish.

endmenu #LwIP memory options

menuconfig NET_LWIP_SOCKET
	bool "Socket support"
	default y

if NET_LWIP_SOCKET

config NET_LWIP_RAW
	bool "Raw socket support"
	default y

config NET_LWIP_SOCKET_OPTION_BROADCAST
	bool "Support SO_BROADCAST Option"
	default n
	---help---
		Enable SO_BROADCAST option support.

config NET_LWIP_RANDOMIZE_INITIAL_LOCAL_PORTS
	bool "Randomize the initial local port for TCP/UDP"
	default n
	---help---
		Randomize the local port for the first local TCP/UDP pcb (default==0).
		This can prevent creating predictable port numbers after booting a device.

config NET_LWIP_SOCKET_SENDTIMEOUT
	bool "Enable send timeout socket option"
	default n

config NET_LWIP_SOCKET_RECVTIMEOUT
	bool "Enable receive timeout socket option"
	default n

config NET_LWIP_SOCKET_RCVBUF
	bool "Enable SO_RCVBUF socket option"
	default y

config NET_LWIP_SOCKET_REUSE
	bool "Enable SO_REUSE socket option"
	default n

endif #NET_LWIP_SOCKET

menuconfig NET_LWIP_ICMP
	bool "ICMP support"
	default y

if NET_LWIP_ICMP

config NET_LWIP_ICMP_BROADCAST_PING
	bool "Enable respond to broadcast pings"
	default n
	---help---
		respond to broadcast pings (default is unicast only)

config NET_LWIP_ICMP_MULTICAST_PING
	bool "Enable respond to multicast pings"
	default n
	---help---
		respond to multicast pings (default is unicast only)

endif #NET_LWIP_ICMP


menuconfig NET_LWIP_IGMP
	bool "IGMP support"
	default n

if NET_LWIP_IGMP

config NET_LWIP_MEMP_NUM_IGMP_GROUP
	int "Maximum number of IGMP group"
	default 8
	---help---
		Number of multicast groups whose network interfaces
		can be members at the same time
endif #NET_LWIP_IGMP


menuconfig NET_LWIP_UDP
	bool "UDP support"
	default y

if NET_LWIP_UDP

config NET_LWIP_UDPLITE
	bool "UDP-Lite support"
	default n

endif #NET_LWIP_UDP

menuconfig NET_LWIP_TCP
	bool "TCP support"
	default y

if NET_LWIP_TCP

config NET_LWIP_TCP_KEEPALIVE
	bool "Enable TCP Keepalive"
	default n


config NET_LWIP_TCP_WINDOW_SIZE
	int "The size of a TCP window"
	default 2144
	---help---
		The size of a TCP window.  This must be at least
		(2 * TCP_MSS) for things to work well

config NET_LWIP_TCP_MAX_RETRANS
	int "Maximum number of retransmissions of data segments"
	default 12
	---help---
		The Maximum number of retransmissions of data segments.

config NET_LWIP_TCP_SYN_MAX_RETRANS
	int "Maximum number of retransmissions of SYN segments"
	default 6
	---help---
		The maximum number of retransmissions of SYN segments

config NET_LWIP_TCP_QUEUE_OOSEQ
	bool "Enable queueing out of order packets"
	default y
	---help---
		Queue segments that arrive out of order.
		Disable if your device is low on memory.

config NET_LWIP_TCP_MSS
	int "TCP Maximum segment size"
	default 536
	---help---
		TCP Maximum segment size in bytes.

config NET_LWIP_TCP_SEND_BUF
	int "TCP send buffer size in bytes"
	default 1072
	---help---
		TCP sender buffer space (bytes).
		To achieve good performance, this should be at least 2 * TCP_MSS.

config NET_LWIP_TCP_TIMESTAMPS
	bool "Support the TCP timestamp option"
	default n
	---help---
		Support the TCP timestamp option.

config NET_LWIP_TCP_LISTEN_BACKLOG
	bool "Support the backlog option for tcp listen pcb"
	default n
	---help---
		Support the the backlog option for tcp listen pcb.

endif #NET_LWIP_TCP
endmenu #LwIP options
